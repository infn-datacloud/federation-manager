[tool.poetry]
name = "federation-manager"
version = "0.1.0"
description = ""
authors = ["Giovanni Savarese <giovanni.savarese@lnl.infn.it>"]
readme = "README.md"
packages = [{ include = "fed_mng" }]

[tool.poetry.dependencies]
python = "^3.11"
federation-registry = {git = "https://github.com/infn-datacloud/federation-registry.git"}
sqlmodel = "^0.0.14"
spiffworkflow = "^3.0.0"
python-socketio = "^5.11.2"
eventlet = "^0.36.1"
websockets = "^12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
ruff = "^0.2.1"
pytest-cases = "^3.8.2"
pytest-cov = "^4.1.0"
httpx = "^0.27.0"
websocket-client = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
# Add rules on PyFlakes(F), pycodestyle (E,W), isort (I), 
# mccabe (C90) pep8-naming (N), pydocstyle (D), pyupgrade (UP), 
# ruff specific rules (RUF),
# flake8-bugbear (B), flake8-logging-format (G), flake8-quotes (Q)
extend-select = ["B", "C90", "E", "F", "G", "I", "N", "Q", "RUF", "UP", "W"]

[tool.ruff.lint.flake8-bugbear]
# Ignore flake8-bugbear errors raised by Depends, Query and Security
extend-immutable-calls = [
    "fastapi.Depends", 
    "fastapi.params.Depends", 
    "fastapi.Query", 
    "fastapi.params.Query", 
    "fastapi.Security", 
    "fastapi.params.Security",
]